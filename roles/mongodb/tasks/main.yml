# Main MongoDB Setup
---
- name: Install Role dependencies
  become: false
  ansible.builtin.command: ansible-galaxy collection install community.mongodb
  delegate_to: localhost
  tags: [mongodb]

- name: Install MongoDB dependencies
  ansible.builtin.apt:
    name: python3-pymongo
    state: latest
  tags: [mongodb]

- name: Check if Docker is installed
  ansible.builtin.command: docker --version
  register: mongo_docker_valid
  ignore_errors: true
  changed_when: false
  tags: [mongodb]

- name: Docker install
  when: mongo_docker_valid.failed
  ansible.builtin.include_role:
    name: docker
  tags: [mongodb]

- name: Install MongoDB
  when: mongodb_use_docker | bool
  ansible.builtin.include_tasks: install-mongodb-docker.yml
  tags: [mongodb]

- name: Install MongoDB
  when: mongodb_use_docker | bool == false
  ansible.builtin.include_role:
    name: '{{ mytask }}'
  loop:
    - 'community.mongodb.mongodb_linux'
    - 'community.mongodb.mongodb_repository'
    - 'community.mongodb.mongodb_install'
    - 'community.mongodb.mongodb_mongod'
    - 'community.mongodb.mongodb_auth'
  loop_control:
    loop_var: mytask
  tags: [mongodb]

- name: Set init pw
  when: mongodb_use_docker | bool == false
  mongodb_user:
    database: admin
    user: '{{ mongodb_root_user | default("root") }}'
    password: '{{ mongodb_root_pw }}'
    state: present
    update_password: always
  tags: [mongodb]

- name: Init MongoDB
  ansible.builtin.include_tasks: init-mongodb.yml
  tags: [mongodb]

- name: Create backup directory if it does not exist
  ansible.builtin.file:
    path: '{{ backup_dir }}'
    state: directory
    mode: '0755'
    owner: root
    group: root
  tags: [mongodb]

- name: Copy backup script
  ansible.builtin.copy:
    src: '{{ mongodb_db_backup_script }}'
    dest: '{{ backup_dir }}/run_backup.sh'
    owner: root
    group: root
    mode: '0755'
  tags: [mongodb]

- name: Setup cron jobs
  ansible.builtin.include_tasks: shared/install-cron-jobs.yml
  vars:
    cron_jobs: '{{ mongodb_cron_jobs }}'
  tags: [mongodb, cron]
