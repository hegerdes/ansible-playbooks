# Copyright 2018-2022 Docker Inc.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Run wasm
# sudo ctr i pull docker.io/wasmedge/example-wasi:latest
# ctr run --rm --runc-binary crun --runtime io.containerd.runc.v2 --label module.wasm.image/variant=compat-smart docker.io/wasmedge/example-wasi:latest wasm-example

# K8s config settings for systemd and various container runtimes
version = 3
# root = '/var/lib/containerd'
# state = '/run/containerd'
# subreaper = true
# oom_score = 0

# plugin_dir = ''
# disabled_plugins = []
# required_plugins = []
# oom_score = 0

# Ansible extra containerd conf
{{ k8s_containerd_extra_config | default('# No ansible extra containerd conf') }}

[plugins]
  # Common
  [plugins.'io.containerd.cri.v1.runtime']
    enable_unprivileged_ports = true
    enable_unprivileged_icmp = true
    enable_cdi = true
    cdi_spec_dirs = ['/etc/cdi', '/var/run/cdi']

    [plugins.'io.containerd.cri.v1.runtime'.containerd]
    default_runtime_name = '{{ k8s_cri }}'

      # runc
      [plugins.'io.containerd.cri.v1.runtime'.containerd.runtimes.runc]
        runtime_type = 'io.containerd.runc.v2'
        [plugins.'io.containerd.cri.v1.runtime'.containerd.runtimes.runc.options]
          SystemdCgroup = true

      # crun
      [plugins.'io.containerd.cri.v1.runtime'.containerd.runtimes.crun]
        runtime_type = 'io.containerd.runc.v2'
        # See: https://github.com/containers/crun/blob/main/docs/wasm-wasi-on-kubernetes.md
        pod_annotations = ['*.wasm.*', 'wasm.*', 'module.wasm.image/*', '*.module.wasm.image', 'module.wasm.image/variant.*']
        [plugins.'io.containerd.cri.v1.runtime'.containerd.runtimes.crun.options]
          BinaryName = '/usr/local/bin/crun'
          SystemdCgroup = true

      # gvisor
      # Docs: https://gvisor.dev/docs/user_guide/containerd/configuration/
      [plugins.'io.containerd.cri.v1.runtime'.containerd.runtimes.runsc]
        runtime_type = 'io.containerd.runsc.v1'
        [plugins.'io.containerd.cri.v1.runtime'.containerd.runtimes.runsc.options]
          TypeUrl = 'io.containerd.runsc.v1.options'
          ConfigPath = '/etc/containerd/runsc.toml'

      # youki
      [plugins.'io.containerd.cri.v1.runtime'.containerd.runtimes.youki]
        runtime_type = 'io.containerd.runc.v2'
        [plugins.'io.containerd.cri.v1.runtime'.containerd.runtimes.youki.options]
          BinaryName = '/usr/local/bin/youki'
          SystemdCgroup = true

      # wasmedge
      # Docs: https://github.com/containerd/runwasi
      [plugins.'io.containerd.cri.v1.runtime'.containerd.runtimes.wasmedge]
        runtime_type = 'io.containerd.wasmedge.v1'

      # wasmtime
      # Docs: https://github.com/containerd/runwasi
      [plugins.'io.containerd.cri.v1.runtime'.containerd.runtimes.wasmtime]
        runtime_type = 'io.containerd.wasmtime.v1'

      # wasmer
      # Docs: https://github.com/containerd/runwasi
      [plugins.'io.containerd.cri.v1.runtime'.containerd.runtimes.wasmer]
        runtime_type = 'io.containerd.wasmer.v1'

      # Spin
      [plugins."io.containerd.cri.v1.runtime".containerd.runtimes.spin]
        runtime_type = "io.containerd.spin.v2"

    # Registry
    [plugins.'io.containerd.cri.v1.images'.registry]
      config_path = '/etc/containerd/certs.d'
  [plugins.'io.containerd.cri.v1.images']
{% if k8s_install_stargz | default(false) %}
    snapshotter = 'stargz'
{% else %}
    snapshotter = 'overlayfs'
{% endif %}

    disable_snapshot_annotations = false
    max_concurrent_downloads = 4


{% if k8s_install_stargz | default(false) %}
# Other container image snapshotter:
# https://github.com/containerd/stargz-snapshotter/blob/main/docs/INSTALL.md
# Use stargz snapshotter
[proxy_plugins]
  [proxy_plugins.stargz]
    type = "snapshot"
    address = "/run/containerd-stargz-grpc/containerd-stargz-grpc.sock"
{% endif %}

# [debug]
#  address = '/run/containerd/debug.sock'
#   uid = 0
#   gid = 0
#   level = 'info'
#   format = ''

# [metrics]
#   address = ''
#   grpc_histogram = false
