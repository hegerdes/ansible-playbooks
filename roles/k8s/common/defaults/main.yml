---
k8s_version: 1.28.4

# Which cri to use: runc, crun or runsc
k8s_cri: crun
k8s_install_gvisor: true
k8s_crun_version: '{{ k8s_crun_default_version if(not k8s_crun_with_wasm) else k8s_crun_wasm_version }}'
# Key value pairs passed to kubelet
k8s_kubelet_extra_args: {}

k8s_crun_with_wasm: false
k8s_crun_wasm_query: assets[?starts_with(name, 'crun')].browser_download_url
k8s_crun_wasm_version: '{{ lookup("url", "https://api.github.com/repos/hegerdes/publish/releases/latest") | from_json | json_query(k8s_crun_wasm_query) | select("search", ansible_facts.architecture) | list | first }}'
k8s_crun_wasmlib_version: 0.0.3
k8s_crun_default_version: '{{ lookup("url", "https://api.github.com/repos/containers/crun/releases/latest") | from_json | json_query("tag_name") }}'

k8s_prepull_images: true
k8s_unattended_upgrades_state: present
k8s_containerd_variant: github # can be docker (uses docker apt repo) or github (official github upstream release)
k8s_containerd_version: latest
k8s_cni_plugins_version: latest # only applies if k8s_containerd_variant is equal to github
k8s_runc_version: latest # only applies if k8s_containerd_variant is equal to github
k8s_selinux_mode: permissive # can be: disabled,enforcing,permissive
k8s_selinux_policy: targeted
k8s_cni: calico

k8s_etc_hosts: []
# Example
# k8s_etc_hosts:
#   - name: k8s-hetzner-cp
#     ip: 127.0.0.1
#     state: present|absent       # optional

k8s_common_sysctl_conf:
  - { key: net.ipv4.ip_forward, val: 1}
  - { key: net.ipv4.conf.all.rp_filter, val: 0}
  - { key: net.ipv4.conf.all.forwarding, val: 1}
  - { key: net.ipv6.conf.all.forwarding, val: 1}
  - { key: net.ipv6.conf.default.forwarding, val: 1}
  - { key: net.bridge.bridge-nf-call-iptables, val: 1}
  - { key: net.bridge.bridge-nf-call-ip6tables, val: 1}
  - { key: vm.overcommit_memory , val: 1}
  - { key: vm.panic_on_oom, val: 0 }
  - { key: kernel.panic_on_oops , val: 1}
  - { key: kernel.panic, val: 10}
  - { key: fs.inotify.max_user_watches, val: 524288}
  - { key: fs.inotify.max_user_instances, val: 512}

k8s_system_limits:
  - user: "root"
    limit: "nofile"
    value: 8192
    comment: ""
# Example
# k8s_system_limits:
#   - user: "*"
#     type: "hard"    # optional
#     limit: "nofile"
#     value: 1048576
#     comment: ""
#   - user: "docker"
#     type: "-"       # hard & soft
#     limit: "core"
#     value: 1048576
#     comment: ""     # optional

# Containerd github setup
k8s_containerd_download_url: '{{ lookup("url", "https://api.github.com/repos/containerd/containerd/releases/latest") | from_json | json_query(k8s_containerd_query) | first if(k8s_containerd_version == "latest") else "https://github.com/containerd/containerd/releases/download/v" + k8s_containerd_version + "/containerd-" + k8s_containerd_version + "-" + ansible_facts.system | lower + "-" + system_arch_map[ansible_facts.architecture] + ".tar.gz" }}'
k8s_runc_download_url: '{{ lookup("url", "https://api.github.com/repos/opencontainers/runc/releases/latest") | from_json | json_query(k8s_runc_query) | first if(k8s_runc_version == "latest") else "https://github.com/opencontainers/runc/releases/download/v" + k8s_runc_version + "/runc." + system_arch_map[ansible_facts.architecture] }}'
k8s_cni_plugin_download_url: '{{ lookup("url", "https://api.github.com/repos/containernetworking/plugins/releases/latest") | from_json | json_query(k8s_cni_plugins_query) | first if(k8s_cni_plugins_version == "latest") else "https://github.com/containernetworking/plugins/releases/download/v" + k8s_cni_plugins_version + "/cni-plugins-" + ansible_facts.system | lower + "-" + system_arch_map[ansible_facts.architecture] + "-v" + k8s_cni_plugins_version + ".tgz" }}'

k8s_containerd_query: "assets[?ends_with(name, '{{ ansible_facts.system | lower }}-{{ system_arch_map[ansible_facts.architecture] }}.tar.gz' )].browser_download_url"
k8s_runc_query: "assets[?ends_with(name, '{{ system_arch_map[ansible_facts.architecture] }}' )].browser_download_url"
k8s_cni_plugins_query: "assets[?starts_with(name, 'cni-plugins-{{ ansible_facts.system | lower }}-{{ system_arch_map[ansible_facts.architecture] }}' )].browser_download_url"

system_arch_map:
  x86_64: amd64
  aarch64: arm64
