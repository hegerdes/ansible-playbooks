# Main k8s Monitoring

- name: Create monitor directory
  file:
    path: '{{ target_data_dir | default("") }}/srv/monitoring/'
    state: directory
  tags: [k8s, k8-init, k8s-monitor]

- name: Create a monitoring namespace
  kubernetes.core.k8s:
    name: monitoring
    api_version: v1
    kind: Namespace
    state: present
    kubeconfig: '{{ k8s_kubeconfig | default("/etc/kubernetes/admin.conf") }}'
  tags: [k8s, k8-init, k8s-monitor]

- name: Add metrics-server helm-chart repo
  kubernetes.core.helm_repository:
    name: metrics-server
    repo_url: https://kubernetes-sigs.github.io/metrics-server/
  tags: [k8s, k8-init, k8s-monitor]

- name: Deploy metrics-server
  kubernetes.core.helm:
    name: metrics-server
    state: '{{ "present" if(k8s_monitoring_install_metrics_server) else "absent" }}'
    chart_version: '{{ k8s_metrics_server_helm_chart_version }}'
    chart_ref: metrics-server/metrics-server
    release_namespace: kube-system
    create_namespace: true
    update_repo_cache: true
    wait: true
    atomic: true
    values: '{{ k8s_metrics_server_helm_values | default({}) }}'
    kubeconfig: '{{ k8s_kubeconfig | default("/etc/kubernetes/admin.conf") }}'
  tags: [k8s, k8-init, k8s-monitor]

- name: Add k8s-dashboard helm-chart repo
  kubernetes.core.helm_repository:
    name: kubernetes-dashboard
    repo_url: https://kubernetes.github.io/dashboard/
  tags: [k8s, k8-init, k8s-monitor, k8s-monitor-dashboard]

- name: Deploy k8s-dashboard
  kubernetes.core.helm:
    name: kubernetes-dashboard
    state: '{{ "present" if(k8s_monitoring_install_dashboard) else "absent" }}'
    chart_version: '{{ k8s_dashboard_chart_version }}'
    chart_ref: kubernetes-dashboard/kubernetes-dashboard
    release_namespace: kubernetes-dashboard
    create_namespace: true
    update_repo_cache: true
    wait: true
    atomic: true
    values: '{{ k8s_dashboard_helm_values | default({}) }}'
    kubeconfig: '{{ k8s_kubeconfig | default("/etc/kubernetes/admin.conf") }}'
  tags: [k8s, k8-init, k8s-monitor, k8s-monitor-dashboard]

- name: Add prometheus helm-chart repo
  kubernetes.core.helm_repository:
    name: prometheus-community
    repo_url: https://prometheus-community.github.io/helm-charts
  tags: [k8s, k8-init, k8s-monitor, k8s-monitor-node-exporter, k8s-monitor-ksm]

- name: Deploy prometheus node-exporter
  kubernetes.core.helm:
    name: prometheus-node-exporter
    state: '{{ "present" if(k8s_monitoring_install_node_exporter) else "absent" }}'
    chart_version: '{{ k8s_node_exporter_chart_version }}'
    chart_ref: prometheus-community/prometheus-node-exporter
    release_namespace: monitoring
    update_repo_cache: true
    create_namespace: true
    atomic: true
    wait: true
    values: '{{ k8s_node_exporter_helm_values | default({}) }}'
    kubeconfig: '{{ k8s_kubeconfig | default("/etc/kubernetes/admin.conf") }}'
  tags: [k8s, k8-init, k8s-monitor, k8s-monitor-node-exporter]

- name: Deploy prometheus kube-state-metrics
  kubernetes.core.helm:
    name: ksm
    state: '{{ "present" if(k8s_monitoring_install_ksm) else "absent" }}'
    chart_ref: prometheus-community/kube-state-metrics
    chart_version: '{{ k8s_ksm_helm_chart_version }}'
    release_namespace: monitoring
    create_namespace: true
    update_repo_cache: true
    atomic: true
    wait: true
    kubeconfig: '{{ k8s_kubeconfig | default("/etc/kubernetes/admin.conf") }}'
    values: '{{ k8s_ksm_helm_values | default({}) }}'
  tags: [k8s, k8-init, k8s-monitor, k8s-monitor-ksm]

- name: Create grafana-agent config-maps
  kubernetes.core.k8s:
    namespace: monitoring
    state: '{{ "present" if(item.install) else "absent" }}'
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: '{{ item.name }}'
      data:
        agent.yaml: |
          {{ item.config | to_nice_yaml(indent=2) }}
        strategies.json: '{{ item.extra_config | default({}) | to_json }}'
    kubeconfig: '{{ k8s_kubeconfig | default("/etc/kubernetes/admin.conf") }}'
  with_items:
    - name: grafana-agent-traces
      install: '{{ k8s_grafana_agent_traces_install }}'
      config: '{{ k8s_grafana_agent_traces_agent_config }}'
      extra_config: '{{ k8s_grafana_agent_traces_strategies_config }}'
    - name: grafana-agent-logs
      install: '{{ k8s_grafana_agent_logs_install }}'
      config: '{{ k8s_grafana_agent_logs_agent_config }}'
    - name: grafana-agent
      install: '{{ k8s_grafana_agent_metrics_install }}'
      config: '{{ k8s_grafana_agent_metrics_agent_config }}'
  tags: [k8s, k8-init, k8s-monitor]

# - name: Apply grafana-agent manifests
#   kubernetes.core.k8s:
#     state: '{{ "present" if(item.install) else "absent" }}'
#     namespace: monitoring
#     wait: True
#     template: '{{ item.file }}'
#     kubeconfig: '{{ k8s_kubeconfig | default("/etc/kubernetes/admin.conf") }}'
#   with_items:
#     - name: grafana-agent
#       file: '{{ k8s_grafana_agent_metrics_agent_app_path }}'
#       install: '{{ k8s_grafana_agent_metrics_install }}'
#       config: '{{ k8s_grafana_agent_metrics_agent_config }}'
#     - name: grafana-agent-logs
#       file: '{{ k8s_grafana_agent_logs_agent_app_path }}'
#       install: '{{ k8s_grafana_agent_logs_install }}'
#       config: '{{ k8s_grafana_agent_logs_agent_config }}'
#     - name: grafana-agent-traces
#       file: '{{ k8s_grafana_agent_traces_agent_app_path }}'
#       install: '{{ k8s_grafana_agent_traces_install }}'
#       config: '{{ k8s_grafana_agent_traces_agent_config }}'
#   tags: [k8s, k8-init, k8s-monitor]

- name: Copy monitoring config files
  ansible.builtin.template:
    src: '{{ item.file }}'
    dest: '{{ target_data_dir | default("") }}/srv/monitoring/{{ item.name }}.yml'
    mode: '0644'
  with_items:
    - name: grafana-agent
      file: '{{ k8s_grafana_agent_metrics_agent_app_path }}'
      config: '{{ k8s_grafana_agent_metrics_agent_config }}'
    - name: grafana-agent-logs
      file: '{{ k8s_grafana_agent_logs_agent_app_path }}'
      config: '{{ k8s_grafana_agent_logs_agent_config }}'
    - name: grafana-agent-traces
      file: '{{ k8s_grafana_agent_traces_agent_app_path }}'
      config: '{{ k8s_grafana_agent_traces_agent_config }}'
  tags: [k8s, k8-init, k8s-monitor]

- name: Apply Grafana Agent Manifest & K8s Dashboad
  kubernetes.core.k8s:
    namespace: monitoring
    kubeconfig: '{{ k8s_kubeconfig | default("/etc/kubernetes/admin.conf") }}'
    state: '{{ "present" if(item.install) else "absent" }}'
    src: '{{ target_data_dir | default("") }}/srv/monitoring/{{ item.name }}.yml'
  with_items:
    - name: grafana-agent
      install: '{{ k8s_grafana_agent_metrics_install }}'
    - name: grafana-agent-logs
      install: '{{ k8s_grafana_agent_logs_install }}'
    - name: grafana-agent-traces
      install: '{{ k8s_grafana_agent_traces_install }}'
  tags: [k8s, k8-init, k8s-monitor]
