---
# Main k8s config setup
- name: k8s cp - configs | Copy config file
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: "{{ ansible_facts.env.HOME }}/.kube/config"
    remote_src: true
    mode: "0600"

- name: k8s cp - configs | Create kube conf dir
  become: false
  run_once: true
  delegate_to: localhost
  ansible.builtin.file:
    path: "~/.kube"
    state: directory

- name: k8s cp - configs | Get kubeconfig - remote
  run_once: true
  no_log: true
  ansible.builtin.slurp:
    src: /etc/kubernetes/admin.conf
  register: __remote_k8s_kubeconf

- name: k8s cp - configs | Configure kubeconfig
  run_once: true
  no_log: true
  ansible.builtin.set_fact:
    internal_k8s_kubeconfig: >-
      {{
      __remote_k8s_kubeconf.content | b64decode | from_yaml |
      combine(
      {'clusters': [(__remote_k8s_kubeconf.content | b64decode | from_yaml).clusters[0] |
      combine(
      {'cluster': {'server': 'https://' + k8s_external_cp_host + ':' + k8s_external_cp_port | default('6443')}}, recursive=true)]})
      if (k8s_external_cp_host | default('') != '')
      else __remote_k8s_kubeconf.content | b64decode | from_yaml
      }}

- name: k8s cp - configs | Creating a file with kubeconf
  become: false
  no_log: true
  run_once: true
  ignore_errors: true
  delegate_to: localhost
  when: lookup("env", "CI") | default("false", true) | bool == false
  ansible.builtin.copy:
    dest: "{{ lookup('env', 'HOME') }}/.kube/{{ (inventory_dir | basename) + '-kubeconfig.yml' }}"
    content: "{{ internal_k8s_kubeconfig | to_nice_yaml(indent=2, sort_keys=true) }}"
    mode: "0600"

- name: k8s cp - configs | Save kubeconf in keyvault
  become: false
  no_log: true
  run_once: true
  delegate_to: localhost
  ignore_errors: true
  azure.azcollection.azure_rm_keyvaultsecret:
    secret_name: "{{ item.name }}"
    secret_value: "{{ item.content }}"
    keyvault_uri: "{{ keyvault }}"
    tags: "{{ default_tags | combine(item.tags) }}"
  with_items:
    - name: "k8s-{{ cluster_slug }}-kube-config"
      content: "{{ internal_k8s_kubeconfig | to_nice_yaml | b64encode }}"
      tags:
        type: kubeconfig
    - name: "k8s-{{ cluster_slug }}-ca"
      content: "{{ (internal_k8s_kubeconfig.clusters | first).cluster['certificate-authority-data'] }}"
      tags:
        type: certificate
  vars:
    cluster_slug: "{{ inventory_dir | basename | replace(' ', '-') | replace('_', '-') }}"
    default_tags:
      origin: ansible
      encoding: base64
      cluster: "{{ inventory_dir | basename }}"
