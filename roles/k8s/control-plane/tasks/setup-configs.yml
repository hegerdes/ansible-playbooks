# Main k8s Setup
- name: Copy config file
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: "{{ ansible_facts.env.HOME }}/.kube/config"
    remote_src: true
    mode: "0600"
  tags: [k8s, k8s-init, k8s-init-config]

- name: Create kube conf dir
  become: false
  run_once: true
  delegate_to: localhost
  ansible.builtin.file:
    path: "~/.kube"
    state: directory
  tags: [k8s, k8s-init, k8s-init-config]

- name: Get kubeconf - remote
  run_once: true
  no_log: true
  ansible.builtin.slurp:
    src: /etc/kubernetes/admin.conf
  register: __remote_k8s_kubeconf
  tags: [k8s, k8s-init, k8s-init-config]

- name: Configure kubeconfig
  run_once: true
  no_log: true
  ansible.builtin.set_fact:
    internal_k8s_kubeconfig: "{{ __remote_k8s_kubeconf.content | b64decode | from_yaml | combine({'clusters': [(__remote_k8s_kubeconf.content | b64decode | from_yaml).clusters[0] | combine({'cluster': {'server': 'https://' + k8s_external_cp_host + ':' + k8s_external_cp_port | default('6443')}}, recursive=true)]}) if (k8s_external_cp_host | default('') != '') else __remote_k8s_kubeconf.content | b64decode | from_yaml }}"
  tags: [k8s, k8s-init, k8s-init-config]

- name: Creating a file with kubeconf
  become: false
  no_log: true
  run_once: true
  ignore_errors: true
  delegate_to: localhost
  when: lookup("env", "CI") | default("false", true) | bool == false
  ansible.builtin.copy:
    dest: "{{ lookup('env', 'HOME') }}/.kube/{{ (inventory_dir | basename) + '-kubeconfig.yml' }}"
    content: "{{ internal_k8s_kubeconfig | to_nice_yaml(indent=2, sort_keys=true) }}"
    mode: "0600"
  tags: [k8s, k8s-init, k8s-init-config]

- name: Save kubeconf in keyvault
  become: false
  no_log: true
  run_once: true
  delegate_to: localhost
  ignore_errors: true
  azure.azcollection.azure_rm_keyvaultsecret:
    secret_name: '{{ item.name }}'
    secret_value: '{{ item.content }}'
    keyvault_uri: "{{ keyvault }}"
    tags: '{{ default_tags | combine(item.tags) }}'
  with_items:
    - name: 'k8s-{{ inventory_dir | basename | replace(" ", "-") | replace("_", "-") }}-kube-config'
      content: '{{ internal_k8s_kubeconfig | to_nice_yaml | b64encode }}'
      tags:
        type: kubeconfig
    - name: 'k8s-{{ inventory_dir | basename | replace(" ", "-") | replace("_", "-") }}-ca'
      content: '{{ (internal_k8s_kubeconfig.clusters | first).cluster["certificate-authority-data"] }}'
      tags:
        type: kubeconfig
  tags: [k8s, k8s-init, k8s-init-config]
  vars:
    default_tags:
      origin: ansible
      encoding: base64
      cluster: "{{ inventory_dir | basename }}"

# - name: Save kubeconf in keyvault
#   become: false
#   ignore_errors: true
#   no_log: true
#   delegate_to: localhost
#   when: keyvault_name is defined
#   run_once: true
#   command: "az keyvault secret set --vault-name {{ keyvault_name }} --name k8s-{{ inventory_dir | basename | replace(' ', '-') | replace('_', '-') }}-kube-config --value {{ internal_k8s_kubeconfig | to_nice_yaml | b64encode }} --tags origin=ansible"
#   tags: [k8s, k8s-init, k8s-init-config]

# kubeadm kubeconfig user --config /srv/kubeadm-config.yml --client-name admin  --org system --validity-period 168h > tmp.yaml
