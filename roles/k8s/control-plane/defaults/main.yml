---
k8s_version: 1.27.4
k8s_dual_stack: false
k8s_cluster_name: '{{ inventory_dir | basename }}'
k8s_image_repo: registry.k8s.io
k8s_shared_api_server_endpoint: '{{ ansible_facts.default_ipv4.address }}'
k8s_pki_ca_path: /etc/kubernetes/pki/ca.crt
k8s_init_verbose: '{{ lookup("env", "CI") | default("false", true) | bool == false }}'
k8s_pod_network_cidr: '{{ [k8s_pod_network_cidr_ipv4,k8s_pod_network_cidr_ipv6] | join(",") if(k8s_dual_stack) else k8s_pod_network_cidr_ipv4}}'
k8s_service_network_cidr: '{{ [k8s_service_network_cidr_ipv4,k8s_service_network_cidr_ipv6] | join(",") if(k8s_dual_stack) else k8s_service_network_cidr_ipv4}}'
k8s_pod_network_cidr_ipv4: 10.244.0.0/16
k8s_service_network_cidr_ipv4: 10.96.0.0/16
k8s_pod_network_cidr_ipv6: 2001:db8:42:0::/56
k8s_service_network_cidr_ipv6: 2001:db8:42:1::/112

k8s_cert_extra_sans: '{{ ["127.0.0.1", "localhost"] + ansible_facts.all_ipv4_addresses }}'
k8s_install_k9s: true
k8s_install_gvisor: true
k8_cert_key: none

######### Taints #########
k8s_remove_no_schedule_cp_taints: false
k8s_taints: []
# # Example
# k8s_taints:
#   - node: '{{ ansible_facts.hostname }}'
#     key: node-role.kubernetes.io/control-plane
#     effect: NoSchedule
#     state: absent

######### INIT-Manifests #########
k8s_init_resources_manifests: []
# # Example
# k8s_init_resources_manifests:
#   - name: oauth2-proxy
#     definition: '{{ lookup("template", k8s_init_resources.file) | from_yaml_all }}'
#     namespace: default      # optional
#     state: present          # optional
#     wait: true              # optional

k8s_gVisor_manifest:
  name: gVisor RuntimeClass
  definition:
    apiVersion: node.k8s.io/v1
    kind: RuntimeClass
    metadata:
      name: gvisor
    handler: runsc

k8s_crun_manifest:
  name: crun RuntimeClass
  definition:
    apiVersion: node.k8s.io/v1
    kind: RuntimeClass
    metadata:
      name: crun
    handler: crun


######### CNI #########
# Which CNI flannel, calico or cilium
k8s_cni: flannel

# Calico helm chart setup
k8s_calico_ip_pools_ipv4:
  - cidr: '{{ k8s_pod_network_cidr if("," not in k8s_pod_network_cidr) else k8s_pod_network_cidr | split(",") | first }}'
    # natOutgoing: Enabled
    # encapsulation: IPIP
    # nodeSelector: all()
  # - blockSize: 26
  #   cidr: 10.48.0.0/21
  #   encapsulation: IPIP
  #   natOutgoing: Enabled
  #   nodeSelector: all()

k8s_calico_ip_pools_ipv6:
  - blockSize: 122
    cidr: '{{ k8s_pod_network_cidr if("," not in k8s_pod_network_cidr) else k8s_pod_network_cidr | split(",") | last }}'
    encapsulation: None
    natOutgoing: Enabled
    nodeSelector: all()

k8s_calico_chart_version: '{{ null | default(omit) }}'
k8s_calico_helm_values:
# See https://docs.tigera.io/calico/3.26/getting-started/kubernetes/helm
# See https://docs.tigera.io/calico/latest/networking/ipam/ipv6#enable-dual-stack
  installation:
    cni:
      type: Calico
    calicoNetwork:
      ipPools: '{{ k8s_calico_ip_pools_ipv4 + k8s_calico_ip_pools_ipv6 if("," in k8s_pod_network_cidr) else k8s_calico_ip_pools_ipv4 }}'

# Cilium helm chart setup
k8s_cilium_chart_version: '{{ null | default(omit) }}'
# See example setup: https://docs.cilium.io/en/stable/helm-reference/
k8s_cilium_helm_values:
  rollOutCiliumPods: true
  priorityClassName: "system-node-critical"
  cluster:
    name: '{{ k8s_cluster_name }}'
  hubble:
    metrics:
      enabled:
        - dns:query
        - drop
        - tcp
        - flow
        - icmp
        - http
    # relay:
    #   enabled: true
    #   rollOutPods: true
    # ui:
    #   enabled: true
    #   rollOutPods: true
  ipam:
    # mode: "kubernetes"
    operator:
      clusterPoolIPv4PodCIDRList: [10.244.0.0/16]

  # encryption:
  #   enabled: true
  #   type: wireguard
  # # -- Configure the underlying network MTU to overwrite auto-detected MTU.
  # MTU: 1450 # for Hetzner
  # # Recreate agent on config map change
  # tunnel: "vxlan"

system_arch_map:
  x86_64: amd64
  aarch64: arm64
