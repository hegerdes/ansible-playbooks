# kubeadm config
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
nodeRegistration:
  kubeletExtraArgs:
    node-ip: {{ k8s_node_ip_v4 | default(ansible_facts.default_ipv4.address) }}{{ "," + k8s_node_ip_v6 | default(ansible_facts.default_ipv6.address) if(k8s_dual_stack) }}
    max-pods: "220"
    protect-kernel-defaults: "true"
    serialize-image-pulls: "false"
    cgroup-driver: systemd
    anonymous-auth: "false"
    {{ k8s_kubelet_extra_args | default({}) | to_nice_yaml(indent=2) | indent(width=4) }}
  ignorePreflightErrors:
    - NumCPU
  # criSocket: unix:///var/run/containerd/containerd.sock
  # imagePullPolicy: IfNotPresent
  # name: cp-node-amd64-cmkhxd
  # taints: null
localAPIEndpoint:
  advertiseAddress: {{ k8s_node_ip_v4 | default(ansible_facts.default_ipv4.address) }}
  bindPort: {{ k8s_kubelet_advertise_port | default(6443) | int }}
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration

kubernetesVersion: {{ k8s_version }}
clusterName: {{ k8s_cluster_name }}
imageRepository: {{ k8s_image_repo }}
certificatesDir: {{ k8s_pki_cert_path }}
controlPlaneEndpoint: {{ k8s_shared_api_server_endpoint }}

networking:
  serviceSubnet: {{ k8s_service_network_cidr }}
  podSubnet: {{ k8s_pod_network_cidr }}
  dnsDomain: "cluster.local"
apiServer:
  timeoutForControlPlane: 4m0s
  extraArgs:
    encryption-provider-config: /etc/kubernetes/enc/encryption-config.yaml
    encryption-provider-config-automatic-reload: "true"
    # anonymous-auth: "false"
  certSANs: {{ k8s_cert_extra_sans + [k8s_shared_api_server_endpoint] | flatten | unique }}
  extraVolumes:
    - name: etcd-encrypt
      hostPath: /etc/kubernetes/enc
      mountPath: /etc/kubernetes/enc
      readOnly: true
      pathType: DirectoryOrCreate
