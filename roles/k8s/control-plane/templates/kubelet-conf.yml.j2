# kubelet config
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration

# See https://kubernetes.io/docs/reference/command-line-tools-reference/feature-gates/
featureGates:
  {{ k8s_feature_gates | default({}) | to_nice_yaml(indent=2) | indent(width=2) }}
  # HPAScaleToZero: true
  # KubeletInUserNamespace: true
  # ClusterTrustBundle: true
  # ClusterTrustBundleProjection: true
  # ImageVolume: true
  # EventedPLEG: true

authentication:
  anonymous:
    enabled: false
  webhook:
    cacheTTL: 0s
    enabled: true
  x509:
    clientCAFile: "{{ k8s_pki_cert_path }}/ca.crt"
authorization:
  mode: Webhook
  webhook:
    cacheAuthorizedTTL: 0s
    cacheUnauthorizedTTL: 0s

# See https://kubernetes.io/docs/reference/access-authn-authz/kubelet-tls-bootstrapping/
rotateCertificates: true
serverTLSBootstrap: true

{% if k8s_cri_runtime | default("containerd") == 'containerd' %}
containerRuntimeEndpoint: "unix:///run/containerd/containerd.sock"
{% else %}
containerRuntimeEndpoint: "unix:///var/run/crio/crio.sock"
{% endif %}
clusterDomain: cluster.local
clusterDNS:
{{ k8s_clusterDNS | to_nice_yaml(indent=2) | indent(width=2) }}

maxPods: 220
nodeStatusMaxImages: 100
maxParallelImagePulls: 8
serializeImagePulls: false
protectKernelDefaults: true
staticPodPath: /etc/kubernetes/manifests
cgroupDriver: systemd
failSwapOn: true
readOnlyPort: 0

logging:
  flushFrequency: 0
  options:
    json:
      infoBufferSize: "0"
