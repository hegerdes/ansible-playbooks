# k8s join
---
- name: k8s worker join | Test reachability to shared KubeControlPlaneHost
  when: k8s_cp_ping_check | default(true)
  ansible.builtin.command: "ping -c 2 {{ k8s_shared_api_server_endpoint }}"
  changed_when: false
  tags: [k8s, k8s-init, k8s-join, k8s-worker-join]

- name: k8s worker join | Check if kubeadm has already run
  ansible.builtin.stat:
    path: /etc/kubernetes/kubelet.conf
  register: __k8s_kubeadm_worker_ca
  tags: [k8s, k8s-init, k8s-join, k8s-worker-join]

- name: k8s worker join | Get join token
  when: not __k8s_kubeadm_worker_ca.stat.exists
  delegate_to: "{{ groups.k8s_control_plane | flatten | first }}"
  ansible.builtin.command: |
    kubeadm token create \
    --ttl 15m \
    --description "{{ ansible_date_time.date }} Token used to join node {{ ansible_hostname }}" \
    --kubeconfig {{ k8s_kubeconfig | default("/etc/kubernetes/admin.conf") }}
  register: __k8_worker_join_token_res
  changed_when: false
  tags: [k8s, k8s-init, k8s-join, k8s-worker-join]

- name: k8s worker join | Get CA certificate hash
  when: not __k8s_kubeadm_worker_ca.stat.exists
  delegate_to: "{{ groups.k8s_control_plane | flatten | first }}"
  community.crypto.x509_certificate_info:
    path: "{{ k8s_pki_cert_path }}/ca.crt"
  register: __k8s_pki_ca
  changed_when: false
  run_once: true
  no_log: true
  tags: [k8s, k8s-init, k8s-join, k8s-worker-join]

- name: k8s worker join | Copy kubelet, kubeadm config
  when: not __k8s_kubeadm_worker_ca.stat.exists
  ansible.builtin.copy:
    content: "{{ item.content }}"
    dest: "{{ item.dst }}"
    mode: "0600"
    validate: "{{ item.validate | default(omit) }}"
  with_items:
    - name: kubeadm-join-conf
      dst: '{{ target_data_dir | default("") }}/srv/kubeadm-join-config.yaml'
      content: "{{ k8s_kubeadm_join_conf }}"
      validate: kubeadm config validate --config %s
    # - name: kubelet-override-conf
    #   dst: /etc/kubernetes/kubelet.conf.d/10-kubelet-ip.conf
    #   content: "{{ k8s_kubelet_override_conf }}"
    #   validate: yq . %s
  loop_control:
    label: "{{ item.name }}"
  tags: [k8s, k8s-init, k8s-join, k8s-worker-join]

- name: k8s worker join | Join worker nodes
  when: not __k8s_kubeadm_worker_ca.stat.exists
  ansible.builtin.command: |
    kubeadm join -v 5 --config {{ target_data_dir | default("") }}/srv/kubeadm-join-config.yaml
  register: __k8s_join_res
  tags: [k8s, k8s-init, k8s-join, k8s-worker-join]

- name: k8s worker join | Change kubelet conf permissions
  ansible.builtin.file:
    path: "{{ item }}"
    owner: root
    group: root
    mode: "0600"
  loop: [/var/lib/kubelet/config.yaml, /lib/systemd/system/kubelet.service]
  tags: [k8s, k8s-init, k8s-join, k8s-worker-join]

- name: k8s worker join | Enable and check kubelet service
  ansible.builtin.systemd:
    name: kubelet
    daemon_reload: true
    state: started
    enabled: true
  tags: [k8s, k8s-init, k8s-join, k8s-worker-join]

- name: k8s worker join | Set node role and arch label
  delegate_to: "{{ groups.k8s_control_plane | flatten | first }}"
  kubernetes.core.k8s:
    kubeconfig: "{{ k8s_kubeconfig | default('/etc/kubernetes/admin.conf') }}"
    state: present
    wait: true
    definition:
      apiVersion: v1
      kind: Node
      metadata:
        name: "{{ inventory_hostname }}"
        labels:
          node-role.kubernetes.io/worker: "worker"
          node-arch.kubernetes.io/arch: "{{ ansible_facts.architecture }}"
  tags: [k8s, k8s-init, k8s-join, k8s-worker-join]

- name: k8s worker join | Get csr resources
  delegate_to: "{{ groups.k8s_control_plane | flatten | first }}"
  run_once: true
  kubernetes.core.k8s_info:
    kubeconfig: "{{ k8s_kubeconfig | default('/etc/kubernetes/admin.conf') }}"
    api_version: certificates.k8s.io/v1
    kind: certificatesigningrequests
  register: __k8s_kubelet_csr_list_res
  tags: [k8s, k8s-init, k8s-join, k8s-worker-join]

- name: k8s worker join | Approve kubelet csr
  delegate_to: "{{ groups.k8s_control_plane | flatten | first }}"
  ansible.builtin.command: "kubectl certificate approve {{ __k8s_kubelet_csr }}"
  when: __k8s_kubelet_csr_list_res.resources | json_query(__k8s_kubelet_csr_query) | length > 0
  register: __k8s_worker_role_set
  changed_when: ("certificatesigningrequest.certificates.k8s.io/" + __k8s_kubelet_csr + " approved") in __k8s_worker_role_set.stdout
  environment:
    KUBECONFIG: "{{ k8s_kubeconfig | default('/etc/kubernetes/admin.conf') }}"
  vars:
    __k8s_kubelet_csr_query: "[?spec.username == 'system:node:{{ inventory_hostname }}' && status == `{}`]"
    __k8s_kubelet_csr: "{{ (__k8s_kubelet_csr_list_res.resources | json_query(__k8s_kubelet_csr_query) | first).metadata.name }}"
  tags: [k8s, k8s-init, k8s-join, k8s-worker-join]

- name: k8s worker join | Debug - Print join res
  when: k8s_init_verbose and not __k8s_kubeadm_worker_ca.stat.exists
  ansible.builtin.debug:
    var: __k8s_join_res
  tags: [k8s, k8s-init, k8s-join, k8s-worker-join]
