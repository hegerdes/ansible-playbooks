apiVersion: apps/v1
kind: Deployment
metadata:
  name: heimdall-deployment
  labels:
    app: my-heimdall
spec:
  replicas: 3
  selector:
    matchLabels:
      app: my-heimdall
  template:
    metadata:
      labels:
        app: my-heimdall
    spec:
      containers:
      - name: my-heimdall
        image: linuxserver/heimdall
        ports:
        - containerPort: 80
---
# Service
apiVersion: v1
kind: Service
metadata:
  name: heimdall-service
spec:
  selector:
    app: my-heimdall
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
# Cert
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-heimdall-prod
  namespace: cert-manager
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: hegerdes@uni-osnabrueck.de
    privateKeySecretRef:
      name: letsencrypt-heimdall-prod
    solvers:
      - http01:
          ingress:
            class: traefik
            # class: nginx

---
# Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: heimdall-ingress
  annotations:
    kubernetes.io/ingress.class: traefik
    # kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-heimdall-prod
spec:
  rules:
    - host: k8s-heimdall.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: heimdall-service
                port:
                  number: 80
  tls:
    - hosts:
      - k8s-heimdall.example.com
      secretName: heimdall-prod

# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: k8s-dashboard-ingress
#   namespace: kubernetes-dashboard
# spec:
#   ingressClassName: nginx
#   rules:
#     - host: k8s-dashboard.example.com
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: kubernetes-dashboard
#                 port:
#                   number: 443
