- name: Ensue config folder exists
  ansible.builtin.file:
    path: /srv/influxdb
    state: directory
  tags: [influxdb]

- name: Check if container exists
  community.docker.docker_container_exec:
    container: influxdb
    ansible.builtin.command: "influx setup --org {{ influx_organization }} --bucket {{ influx_root_bucket }} --username {{ influx_root_user }} --password {{ influx_root_pw }} --host http://{{ influx_listen_addr }} --force"
  register: influx_setup_check
  failed_when: false
  changed_when: false
  tags: [influxdb]

- name: Get Token
  when: '"stderr" in influx_setup_check.keys() and "instance has already been set up" in influx_setup_check.stderr'
  community.docker.docker_container_exec:
    container: influxdb
    ansible.builtin.command: "influx auth ls --user root --json"
  register: influx_setup_auth_res
  ignore_errors: true
  changed_when: false
  tags: [influxdb]

- name: Setting token
  when: '"stderr" in influx_setup_check.keys() and "instance has already been set up" in influx_setup_check.stderr'
  ansible.builtin.set_fact:
    influx_gen_root_token: '- TOKEN={{ (influx_setup_auth_res.stdout | replace("\n", "") | replace("\t", "") | from_json)[0].token }}'
  tags: [influxdb]

- name: Copy influx compose file
  ansible.builtin.template:
    src: influx-docker-compose.yml.j2
    dest: /srv/influxdb/influx-docker-compose.yml
    mode: "0644"
  tags: [influxdb]

- name: Deploy influxdb via compose
  community.docker.docker_compose_v2:
    project_src: /srv/influxdb
    state: present
    remove_orphans: true
    project_name: service-influxdb
    files:
      - influx-docker-compose.yml
  register: influx_deploy_res
  tags: [influxdb]

- name: Sleep for 15 seconds and continue with play
  ansible.builtin.wait_for:
    timeout: 15
  tags: [influxdb]

- name: Run Influx init
  community.docker.docker_container_exec:
    container: influxdb
    ansible.builtin.command: "influx setup --org {{ influx_organization }} --bucket {{ influx_root_bucket }} --username {{ influx_root_user }} --password {{ influx_root_pw }} --host http://{{ influx_listen_addr }} --force"
  register: influx_setup_res
  changed_when: 'influx_setup_res.stderr != "Error: instance has already been set up"'
  failed_when: 'influx_setup_res.stderr != "Error: instance has already been set up" and influx_setup_res.rc != 0'
  tags: [influxdb]

- name: Get Token
  when: influx_deploy_res.changed
  community.docker.docker_container_exec:
    container: influxdb
    ansible.builtin.command: "influx auth ls --json"
  register: influx_setup_auth_res
  ignore_errors: true
  tags: [influxdb]

- name: Setting token
  when: influx_deploy_res.changed and influx_setup_auth_res.stdout
  ansible.builtin.set_fact:
    influx_gen_root_token: '- TOKEN={{ (influx_setup_auth_res.stdout | replace("\n", "") | replace("\t", "") | from_json)[0].token }}'
  tags: [influxdb]

- name: Copy influx compose file
  when: influx_deploy_res.changed
  ansible.builtin.template:
    src: influx-docker-compose.yml.j2
    dest: /srv/influxdb/influx-docker-compose.yml
    mode: "0644"
  tags: [influxdb]

- name: Deploy influxdb via compose
  when: influx_deploy_res.changed
  community.docker.docker_compose_v2:
    project_src: /srv/influxdb
    state: present
    remove_orphans: true
    project_name: service
    files:
      - influx-docker-compose.yml
  tags: [influxdb]
