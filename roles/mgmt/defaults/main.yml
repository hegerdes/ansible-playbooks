---

# JumpHost user
mgmt_jumphost_user: gitlab
# List of ssh key_paths for mgmt_jumphost_user
mgmt_ssh_keys: []
mgmt_init_backup: true
# Options for sshd
sshd_options:
  - Port 22
# Backup
backup_dir: /backup_dumps
mgmt_backup_target_hosts: []
mgmt_backup_target_ssh_args: ''
mgmt_azure_token: '{{ lookup("env","AZURE_SAS_TOKEN") | default("none", true) }}'
mgmt_s3_uri: '{{ lookup("env","S3_TOKEN_STRING") | default("none", true) }}'
mgmt_node_name: mgmt

# Use stack deploy mode or compose mode
mgmt_use_srync_copy: false
mgmt_use_swarm_mode: true
mgmt_src_config_files: srv/
mgmt_dst_config_files: /srv/
mgmt_docker_stack_name: monitor-stack

mgmt_services_to_install:
  - mgmt-stack.yml
  - mgmt-stack-heimdall.yml

# Nginx exporter targets
mgmt_waf_exporter: []
# Example
# mgmt_waf_exporter:
#   - name: waf-1
#     target: 10.200.3.10
#   - name: waf-2
#     target: 10.200.3.2

mgmt_prometheus_retention_time: 42d
mgmt_mongodb_target_host: null
mgmt_sql_taget_host: null
mgmt_sql_taget_port: 3306
mgmt_sql_exporter_user: root
mgmt_sql_exporter_pw: '{{ mariadb_root_pw }}'
mgmt_sql_taget_host_template: '{{ "PMA_HOST=" + mgmt_sql_taget_host if (mgmt_sql_taget_host) else "PMA_ARBITRARY=1" }}'
mgmt_sql_exporter_connection_string: '{{ mgmt_sql_exporter_user + ":" + mgmt_sql_exporter_pw + "@" + "(" + mgmt_sql_taget_host + ":" + mgmt_sql_taget_port | string +")" }}'
mgmt_mongodb_exporter_uri: user:pass@127.0.0.1:27017/admin

mgmt_use_wireguard: false
mgmt_wireguard_public_ip: '{{ ansible_default_ipv4.address }}'
mgmt_wireguard_clients: 1
mgmt_wireguard_port: 51820

# Chronograf
mgmt_chronograf_version: 1.9-alpine
mgmt_chronograf_port: 8888

# phpMyAdmin
# mgmt_php_my_admin_hosts:
#   - name: dev
#     host: 10.20.0.4
#   - name: prod
#     host: 10.10.0.7

mgmt_prometheus_host_aliases:
  - myhost:127.0.0.1

# PGAdmin
mgmt_pgadmin_pw: mySuperSecureAdminPW

# Grafana and Portainer setup
mgmt_setup_portainer: true
mgmt_portainer_edition: ce
mgmt_portainer_pw: mySuperSecureAdminPW
mgmt_portainer_host: localhost:9000
mgmt_portainer_included_agent: false
mgmt_portainer_nodes: {}
mgmt_portainer_agentless_opts: |
  - /var/run/docker.sock:/var/run/docker.sock
  - /var/lib/docker/volumes:/var/lib/docker/volumes

mgmt_setup_grafana: true
mgmt_proxy_loki: false
mgmt_grafana_pw: mySuperSecureAdminPW
mgmt_grafana_host: localhost:3000
mgmt_grafana_dashbord_ids:
  - 12708   # Zabbix
  - 1860    # Node_exporter
  - 12708   # NGINX exporter
  - 7362    # SQL Metrics
  - 1229    # Docker metrics
  - 14282   # Cadvisor
  - 13407   # Loki metrics
  - 13452   # PiHole
  - 12250   # Traefik
  - 3662    # Prometheus
  - 8010    # Alertmanager

# Proxy settings
mgmt_domain: localhost
mgmt_proxy_use_tls: false
mgmt_certbot_mail: info@xyz.com
mgmt_use_traefik: '{{ "mgmt-stack-traefik.yml" is in mgmt_services_to_install }}'
mgmt_traefik_version: latest

# Add basic auth via proxy
mgmt_proxy_users_auth: {}
# Example
# mgmt_proxy_users_auth:
#   portainer:
#     - username: portainer
#       password: portainer

# TRAEFIK
mgmt_traefik_labels: '{{ mgmt_traefik_default_labels if(mgmt_use_traefik) else "" }}'

mgmt_traefik_extra_flags: ""
mgmt_traefik_extra_ports: ""
mgmt_traefik_default_labels: |
  - "traefik.enable=true"
  - "traefik.http.routers.__SERVICE__.rule=Host(`__SERVICE__.{{ mgmt_domain }}`)"
  - "traefik.http.routers.__SERVICE__.entrypoints={{'websecure' if(mgmt_proxy_use_tls) else 'web'}}"
  - "traefik.http.services.__SERVICE__.loadbalancer.server.port=__PORT__"
  {{ '- "traefik.http.routers.__SERVICE__.tls.certresolver=myresolver"' if (mgmt_proxy_use_tls) }}
mgmt_traefik_tls_flags: |
  - "--entrypoints.websecure.address=:443"
  - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
  - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
  - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
  - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
  - "--certificatesresolvers.myresolver.acme.email={{ mgmt_certbot_mail }}"
  - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
mgmt_traefik_default_auth_labels: |
  - "traefik.http.routers.__SERVICE__.middlewares=__SERVICE__-auth"
  - "traefik.http.middlewares.__SERVICE__-auth.basicauth.realm=mgmt"
  - "traefik.http.middlewares.__SERVICE__-auth.basicauth.removeheader=true"
  - "traefik.http.middlewares.__SERVICE__-auth.basicauth.headerField=X-WebAuth-User"
  - "traefik.http.middlewares.__SERVICE__-auth.basicauth.users={% for entry in item.value | default([]) %}{{ entry.username }}:{{ entry.password | password_hash('bcrypt') | replace('$','$$') }},{% endfor %}"
