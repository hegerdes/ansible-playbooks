# Main Docker deploy
---
- name: Create a artifact directory
  delegate_to: localhost
  become: false
  run_once: true
  ansible.builtin.file:
    dest: '{{ docker_deploy_artifact_dir }}'
    state: directory
  tags: [docker-deploy]

- name: Get the info on Docker host
  community.docker.docker_swarm_info:
  ignore_errors: true
  register: swarm_info
  failed_when: 'not swarm_info.can_talk_to_docker'
  tags: [docker-deploy]

- name: Init a new swarm
  when: docker_deploy_use_swarm_mode | bool and not swarm_info.docker_swarm_active and docker_deploy_projects | length > 0
  community.docker.docker_swarm:
    advertise_addr: '{{ ansible_host }}'
    state: present
  tags: [docker-deploy]

- name: Log into Docker registries
  community.docker.docker_login:
    registry_url: '{{ item.regestry | default("https://index.docker.io/v1/") }}'
    username: '{{ item.username }}'
    password: '{{ item.password }}'
    reauthorize: true
  loop: '{{ docker_regesties }}'
  loop_control:
    label: '{{ item.regestry | default("https://index.docker.io/v1/") }}'
  tags: [docker-deploy]

- name: Synchronization of application compose|stack files
  ansible.posix.synchronize:
    src: '{{ docker_deploy_src_config_files }}'
    dest: '{{ docker_deploy_dst_config_files }}'
    recursive: true
    use_ssh_args: true
    mode: push
    checksum: true
    rsync_opts: '{{ docker_deploy_rsync_args }}'
  tags: [docker-deploy]

- name: Using override-file with the following content
  when: docker_deploy_override is defined and docker_deploy_override | length > 0
  ansible.builtin.debug:
    var: docker_deploy_override
  tags: [docker-deploy, docker-deploy-stack]

- name: Copy backup script
  when: docker_deploy_backup_script | default("none") != "none"
  ansible.builtin.copy:
    src: '{{ docker_deploy_backup_script }}'
    dest: '{{ backup_dir }}/run_backup.sh'
    owner: root
    group: root
    mode: '0755'
  tags: [docker-deploy, backup]

- name: Deploy Apps via Docker-Service-CLI
  when: docker_deploy_services | default([]) | length > 0 or docker_deploy_volumes | default([]) | length > 0 or docker_deploy_networks | default([]) | length > 0
  ansible.builtin.include_tasks: doploy-service.yml
  tags: [docker-deploy, docker-deploy-service]

- name: Fix file permissions
  ansible.builtin.file:
    path: '{{ docker_deploy_dst_config_files + item.name }}'
    owner: root
    group: root
    mode: '{{ item.mode | default("0644") }}'
  loop: '{{ docker_deploy_file_permissions }}'
  tags: [docker-deploy]

- name: Deploy Apps via Docker-Compose-File
  when: swarm_info.docker_swarm_manager or not docker_deploy_use_swarm_mode
  ansible.builtin.include_tasks: deploy-stack.yml
  loop: '{{ docker_deploy_projects }}'
  loop_control:
    loop_var: docker_project
  tags: [docker-deploy, docker-deploy-stack]

- name: Get Stack Info
  when: docker_deploy_use_swarm_mode | bool and swarm_info.docker_swarm_manager
  community.docker.docker_stack_info:
  register: app_docker_stack_info
  tags: [docker-deploy]

- name: Get Info on Docker Swarm
  changed_when: false
  when: docker_deploy_use_swarm_mode | bool and swarm_info.docker_swarm_manager
  ansible.builtin.command: docker service ls
  ignore_errors: true
  register: app_docker_swarm_info
  tags: [docker-deploy]

- name: Get Info on Docker Containers
  changed_when: false
  ansible.builtin.command: 'docker ps --format "table {{ "{{" }}.Status{{ "}}" }}\t{{ "{{" }}.RunningFor{{ "}}" }}\t{{ "{{" }} .Image{{ "}}" }}\t{{ "{{" }}.Names{{ "}}" }}"'
  ignore_errors: true
  register: app_docker_container_info
  tags: [docker-deploy]

- name: Show Stack info
  when: docker_deploy_use_swarm_mode | bool and swarm_info.docker_swarm_manager
  ansible.builtin.debug:
    var: app_docker_stack_info.results
  tags: [docker-deploy]

- name: Print Swarm Info
  when: docker_deploy_use_swarm_mode | bool and swarm_info.docker_swarm_manager
  ansible.builtin.debug:
    var: app_docker_swarm_info.stdout_lines
  ignore_errors: true
  tags: [docker-deploy]

- name: Show Container Info
  ansible.builtin.debug:
    var: app_docker_container_info.stdout_lines
  tags: [docker-deploy]
