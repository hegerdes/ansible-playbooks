# Testing

# - hosts: localhost
#   become: False
#   gather_facts: False
#   vars:
#     k8s_pod_network_cidr: 10.10.10.10/24
#   # vars_files:
#   #   - '{{ inventory_dir }}/secrets/vault.yml'
#   roles:
#     - k8s/hetzner
#     # - k8s/ingress-nginx
#     # - k8s/monitoring
#     # - k8s/deploy

- hosts: localhost
  become: true
  gather_facts: true
  roles:
    - hashicorp/packer

- hosts: localhost
  become: false
  gather_facts: true
  vars:
    k8s_kubeconfig: ~/.kube/config
  roles:
    # - k8s/hetzner
    # - k8s/certmanager
    # - k8s/ingress-nginx
    # # - k8s/ingress-traefik
    # - k8s/metrics
    # - k8s/longhorn
    # - k8s/grafana-mimir
    # - k8s/metallb
    - k8s/deploy
    # - k8s/argocd
    # - k8s/rancher
  # vars_files:
  #   - '{{ inventory_dir }}/secrets/vault.yml'

- hosts: localhost
  become: False
  gather_facts: true
  # roles:
  #   - k8s/monitoring
  vars:
    k8s_pod_network_cidr: 10.10.10.10/24
    k8s_crun_wasmlib_version: 0.0.2

  # vars_files:
  #   - '{{ inventory_dir }}/secrets/vault.yml'
  tasks:
    # - debug:
    #     msg: '{{ k8s_crun_wasmlib_version | split(".") | first }}'
    # - debug:
    #     msg: '{{  ansible_facts.architecture }}'
    - debug:
        msg: '{{ item }}'
      loop: '{{ cockpit_packages }}'
      vars:
        cockpit_packages:
          - { name: "cockpit", install_weak_deps: false }
          - { name: "cockpit-ws"}
          - { name: "cockpit-system"}
          - { name: "cockpit-storaged"}
          - { name: "cockpit-selinux"}
          # - { name: "cockpit-pcp", when: "{{ 'pcp' in ansible_facts.packages }}" }
          # - { name: "cockpit-machines", when: "{{ 'libvirt-client' in ansible_facts.packages }}" }
          # - { name: "cockpit-podman", when: "{{ 'podman' in ansible_facts.packages }}" }



    # - debug:
    #     msg: '{{ lookup("url", "https://api.github.com/repos/prometheus/node_exporter/releases/latest") | from_json | json_query(query) | select("search", crun_arch_map[ansible_facts.architecture]) | list | first }}'
    #   vars:
    #     # query: assets[*].browser_download_url
    #     query: assets[?contains(name, 'linux')].browser_download_url
    #     crun_arch_map:
    #       x86_64: amd64
    #       aarch64: arm64

    - debug:
        msg: '{{ lookup("az_keyvault", "test-secret", vault_url=keyvault ) }}'
      vars:
        keyvault: https://hegerdes.vault.azure.net

# - name: Get promtail URL
#   when: promtail_check_result.stdout == ""
#   ansible.builtin.shell: |
#     curl --silent https://api.github.com/repos/grafana/loki/releases/latest | grep browser_download_url | cut -d '"' -f 4 | grep promtail-linux-amd
#   register: promtail_url
#   tags: [promtail, monitoring]

  # - name: Give users access to multiple databases
  #   debug:
  #     msg: "{{ ingress_class[0] }} {{ ingress_class[1] }}"
  #   loop: "{{ ['nginx', 'traefik'] | product(['lets-encrypt-issuer-staging.yml', 'lets-encrypt-issuer-prod.yml']) | list }}"
  #   loop_control:
  #     loop_var: ingress_class
  # tasks:
  # - name: Determine latest wasm crun GitHub release
  #   uri:
  #     url: "https://api.github.com/repos/hegerdes/publish/releases/latest"
  #     body_format: json
  #   register: _k8s_wasm_crun_github_release
  #   until: _k8s_wasm_crun_github_release.status == 200
  #   run_once: true
  #   retries: 3
  #   tags: [k8s, k8s-prepare, k8s-base]

  # - name: debug
  #   debug:
  #     msg: '{{ ansible_facts.architecture }}'
  #   tags: [k8s, k8s-prepare, k8s-base]

  # - name: debug
  #   debug:
  #     msg: '{{ _k8s_wasm_crun_github_release.json | json_query(query) | select("search", ansible_facts.architecture) | list }}'
  #   vars:
  #     query: assets[?starts_with(name, 'crun')].browser_download_url
  #   tags: [k8s, k8s-prepare, k8s-base]

  # - name: Install official crun
  #   ansible.builtin.get_url:
  #     url: https://github.com/containers/crun/releases/download/{{ k8s_crun_version }}/crun-{{ k8s_crun_version }}-linux-{{ crun_arch_map[ansible_facts.architecture] }}
  #     dest: /tmp/crun_tmp
  #     mode: '0754'
  #   vars:
  #     k8s_crun_version: 1.8.4
  #     crun_arch_map:
  #       x86_64: amd64
  #       aarch64: arm64
  #   tags: [k8s, k8s-prepare, k8s-base]

  # - name: Download crun
  #   ansible.builtin.unarchive:
  #     src: '{{ _k8s_wasm_crun_github_release.json | json_query(query) | first }}'
  #     dest: /tmp
  #     remote_src: true
  #     creates: /tmp/crun
  #   retries: 3
  #   vars:
  #     query: assets[?starts_with(name, 'crun')].browser_download_url
  #   tags: [k8s, k8s-prepare, k8s-base]
